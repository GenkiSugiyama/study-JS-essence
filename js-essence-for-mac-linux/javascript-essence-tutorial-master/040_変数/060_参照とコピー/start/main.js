// プリミティブ型の参照とコピー
// プリミティブ型のデータを変数に格納する時、変数は直接データを参照する
// その変数をコピーする場合は、コピー元の変数が参照する値のコピーを新しいメモリアドレスに記録しコピー先の変数はそのアドレスを参照する
// そのためコピー先の変数の値が書き換えられてもコピー先の値が変わるだけでコピー元の値は変わらない
let a = "hello";
let b = a;
console.log(a, b); // bは「aが参照している値のコピー」を参照しているのでどちらも同じ値が返ってくる
b = "bye";
console.log(a, b); // bの参照先の値が書き換えられたので「aはそのまま、bは書き換え後の値」となる

// オブジェクト型の参照とコピー
// 変数→オブジェクトのアドレス→オブジェクトの実態→オブジェクトが保持する値の順に参照する
// 変数がコピーされてもコピー元が持つ「オブジェクトのアドレス（参照先）」がコピーされるだけで、参照するオブジェクト型データとその値はコピー元とコピー先で一緒なまま
// そのためコピー先でオブジェクトの値が書き換えられるとコピー元も変化する
let c = {
  prop: "hello"
}
let d = c;
console.log(c, d); //dはcと同じ「オブジェクト型データへの参照」を保持することになるので
d.prop = "bye";
console.log(c,d) // 参照元が一緒なのでdの値が変わるとcも影響をうける

d = {

};
console.log(c,d) // コピー先で新しいオブジェクトを参照した場合は、コピー先のみ新しいオブジェクトへ参照のむきさきが変わるだけで
// コピー元には影響はない
